environment: dev

wsFlareGatewayImage: wsflare/ws-flare-gateway:1
wsFlareUiImage: wsflare/ws-flare-ui:78
wsFlareUserApiImage: wsflare/ws-flare-user-api:8
wsFlareProjectsApiImage: wsflare/ws-flare-projects-api:24
wsFlareJobsApiImage: wsflare/ws-flare-jobs-api:12
wsFlareGraphql: wsflare/ws-flare-graphql:56
wsFlareOrchestrationApiImage: wsflare/ws-flare-orchestration-api:40
wsFlareCloudFoundryMonitorApiImage: wsflare/ws-flare-cloud-foundry-monitor-api:11

### Storage
storageMysqlImage: mysql:5.7.13
storageXtraBackupImage: gcr.io/google-samples/xtrabackup:1.0

### Messaging
messagingRabbitmqImage: bitnami/rabbitmq:3.7.7-debian-9

serviceType: ClusterIP
ImagePullPolicy: Always

mysqlha:
  replicaCount: 2
  mysqlRootPassword: TSKSg5F4
  mysqlReplicationUser: repl
  mysqlReplicationPassword: a9q8mJXBZj
  mysqlUser: qrVEtzcumS
  mysqlPassword: rapXt9ryzn
  configFiles:
    master.cnf: |
      # Apply this config only on the master.
      [mysqld]
      log-bin
      skip_name_resolve
    slave.cnf: |
      # Apply this config only on slaves.
      [mysqld]
      super-read-only
      skip_name_resolve
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

rabbitmq:
  replicaCount: 2
  username: user
  password: p5zrAAJm
  nodeSelector: {}
  tolerations: []
  affinity: {}
  plugins: |-
    [rabbitmq_management, rabbitmq_peer_discovery_k8s].
  configuration: |-
    ## Clustering
    cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
    cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
    cluster_formation.k8s.address_type = ip
    cluster_formation.node_cleanup.interval = 10
    cluster_formation.node_cleanup.only_log_warning = true
    cluster_partition_handling = autoheal
    ## queue master locator
    queue_master_locator=min-masters
    ## enable guest user
    loopback_users.guest = false
